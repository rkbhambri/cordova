{"version":3,"sources":["helpers/messages.js","helpers/Object.js","components/Auth/SocialLogin/SocialLogin.js","helpers/formHandling.js","components/Auth/Signup/SignupForm/SignupForm.js","components/Auth/Signup/Signup.js"],"names":["messages","socialMedia","name","email","cardName","category","required","invalidEmail","notMatch","passwordFormat","firstName","lastName","mobile","isMobileInvalid","dateOfBirth","summary","schoolName","area","city","fromGrade","toGrade","competitionName","year","standing","videoUrl","title","explanation","tags","participants","teamName","projectName","problemToSolve","reasonToSolveProblem","approachToSolveProblem","technologyUsed","isObjectEmpty","obj","Object","keys","length","isObjectNotEmpty","SocialLogin","props","responseGoogle","response","authDetails","profileObj","socialAccessToken","accessToken","loginType","onSocialLogin","className","appId","facebookAppId","fields","size","icon","style","width","callback","isMobile","window","innerWidth","innerHeight","clientId","googleClientId","buttonText","loginScope","onSuccess","onFailure","cookiePolicy","validatePassword","password","trim","test","SignupForm","useState","confirmPassword","formInput","setFormInput","invalidInput","setInvalidInput","useEffect","userDetails","formChangeHandler","event","formInputDetails","target","id","value","invalidInputDetails","parseData","Form","onSubmit","key","isEmpty","isEqual","signup","Input","error","type","fluid","label","placeholder","onChange","Button","connect","state","auth","authRedirectPath","isLoading","dispatch","onSignup","signupDetails","actionCreaters","onSetRedirectPath","path","onResetError","getItem","authRedirect","to","Col","Row","height","justifyContent","alignItems","md","lg","xs","resetError"],"mappings":"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","file":"static/js/14.615fb784.chunk.js","sourcesContent":["\nexport const messages = {\n    socialMedia: 'Please add atleast one social media',\n    name: 'Name is required',\n    email: 'Email is required',\n    cardName: 'Card Name is required',\n    category: 'Card Category is required',\n    required: 'is required',\n    invalidEmail: 'Please enter a valid email',\n    notMatch: 'Password and Confirm Password not match',\n    passwordFormat: 'At least 6 characters with at least 1 Small & Upper case character, a number & symbol',\n    firstName: 'First name is required',\n    lastName: 'Last name is required',\n    mobile: 'Mobile number is required',\n    isMobileInvalid: 'Mobile number contain 10 digits',\n    dateOfBirth: 'Date Of Birth is required',\n    summary: 'Summary is required',\n    schoolName: 'School name is required',\n    area: 'Area is required',\n    city: 'City is required',\n    fromGrade: 'From class is required',\n    toGrade: 'To Class is required',\n    competitionName: 'Competition name is required',\n    year: 'Year is required',\n    standing: 'Standing position is required',\n    videoUrl: 'Video is required',\n    title: 'Title is required',\n    explanation: 'Explanation is required',\n    tags: 'Tags are required',\n    participants: 'Please add atlease one participant',\n    teamName: 'Please enter your team name',\n    projectName: 'Please enter your project name',\n    problemToSolve: 'Please specify the problem to solve',\n    reasonToSolveProblem: 'Please specify the reason to solve the problem',\n    approachToSolveProblem: 'Please specify your approach to solve the problem',\n    technologyUsed: 'Please specify the list of technologies you want to use'\n};\n","\nexport const isKeyExist = (obj, key) => {\n    return obj.hasOwnProperty(key);\n};\n\nexport const isObjectEmpty = (obj) => {\n    return Object.keys(obj).length === 0;\n};\n\nexport const isObjectNotEmpty = (obj) => {\n    return Object.keys(obj).length > 0;\n};\n","import React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { facebookAppId, googleClientId } from '../../../config';\nimport './SocialLogin.css';\n\nconst SocialLogin = (props) => {\n\n    const responseGoogle = (response) => {\n        if ('googleId' in response) {\n            const authDetails = {\n                email: response.profileObj.email,\n                socialAccessToken: response.accessToken,\n                loginType: 'google'\n            };\n            props.onSocialLogin(authDetails);\n        }\n    };\n    const responseFacebook = (response) => {\n        if (response) {\n            const authDetails = {\n                email: response.email,\n                socialAccessToken: response.accessToken,\n                loginType: 'facebook'\n            };\n            props.onSocialLogin(authDetails);\n        }\n    };\n\n    return (\n        <div className=\"social-login\">\n            <div className=\"facebook-login\">\n                <FacebookLogin\n                    className=\"p-1\"\n                    appId={facebookAppId}\n                    fields=\"name,email\"\n                    size=\"metro\"\n                    icon=\"fa-facebook\"\n                    style={{ width: '100%' }}\n                    callback={responseFacebook}\n                    // Check if mobile screen then enable isMobile prop\n                    isMobile={window.innerWidth <= 800 && window.innerHeight <= 600}\n                // render={renderProps => (\n                //     <Button color='facebook' onClick={renderProps.onClick}>\n                //         <Icon name='facebook' /> Facebook\n                //     </Button>\n                // )}\n                />\n            </div><br />\n            <div className=\"google-login\">\n                <GoogleLogin\n                    clientId={googleClientId}\n                    buttonText=\"LOGIN WITH GOOGLE\"\n                    className=\"w-100\"\n                    loginScope='email profile openid'\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default SocialLogin;\n","\nexport const validateEmail = (email) => {\n    let regex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    return email.trim() !== '' && regex.test(email);\n};\n\nexport const validatePassword = (password) => {\n    let regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#])[A-Za-z\\d@$!%*?&#]{6,30}$/;\n    return password.trim() !== '' && regex.test(password);\n};\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { parseData, isEmpty, isEqual } from '../../../../helpers/miscellaneous';\nimport { messages } from '../../../../helpers/messages';\nimport { validateEmail, validatePassword } from '../../../../helpers/formHandling';\nimport { isObjectEmpty } from '../../../../helpers/Object';\n// import { Col } from 'reactstrap';\n// import Loader from '../../Loader/Loader';\n\nconst SignupForm = (props) => {\n\n    const [formInput, setFormInput] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n    const [invalidInput, setInvalidInput] = useState({});\n\n    useEffect(() => {\n        return (() => {\n            setFormInput({\n                name: '',\n                email: '',\n                password: '',\n                confirmPassword: ''\n            });\n        })\n    }, [props.userDetails]);\n\n\n    const formChangeHandler = (event) => {\n        const formInputDetails = { ...formInput };\n        formInputDetails[event.target.id] = event.target.value;\n        setFormInput(formInputDetails);\n\n        if (invalidInput[event.target.id]) {\n            const invalidInputDetails = parseData(invalidInput);\n            if (event.target.id === 'password' || event.target.id === 'confirmPassword') {\n                delete invalidInputDetails['confirmPassword'];\n                delete invalidInputDetails['password'];\n            } else {\n                delete invalidInputDetails[event.target.id];\n            }\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    const signup = () => {\n        const invalidInputDetails = parseData(invalidInput);\n\n        for (let key in formInput) {\n            if (isEmpty(formInput[key])) {\n                invalidInputDetails[key] = `${key} ${messages.required}`;\n            }\n        }\n\n        if (!validateEmail(formInput.email)) {\n            invalidInputDetails.email = messages.invalidEmail;\n        }\n        if (validatePassword(formInput.password) && !isEqual(formInput.password, formInput.confirmPassword)) {\n            invalidInputDetails.password = messages.notMatch;\n            invalidInputDetails.confirmPassword = messages.notMatch;\n        }\n        if (!validatePassword(formInput.password)) {\n            invalidInputDetails.password = messages.passwordFormat;\n        }\n\n        setInvalidInput(invalidInputDetails);\n        if (isObjectEmpty(invalidInputDetails)) {\n            const formInputDetails = parseData(formInput);\n            delete formInputDetails.confirmPassword;\n            props.signup(formInputDetails);\n        }\n    };\n\n    return (\n        <Form onSubmit={() => signup()}>\n            <Form.Input\n                // error={{ content: 'Please enter your first name', pointing: 'below' }}\n                error={invalidInput.name}\n                type=\"text\"\n                id='name'\n                required\n                fluid\n                value={formInput.name}\n                label='Name'\n                placeholder='Name'\n                onChange={(event) => formChangeHandler(event)}\n            />\n            <Form.Input\n                // error={{ content: 'Please enter your first name', pointing: 'below' }}\n                error={invalidInput.email}\n                type=\"email\"\n                id='email'\n                required\n                fluid\n                value={formInput.email}\n                label='Email'\n                placeholder='Email'\n                onChange={(event) => formChangeHandler(event)}\n            />\n            <Form.Input\n                error={invalidInput.password}\n                type='password'\n                id='password'\n                required\n                fluid\n                value={formInput.password}\n                label='Password'\n                placeholder='Password'\n                onChange={(event) => formChangeHandler(event)}\n            />\n            <Form.Input\n                error={invalidInput.confirmPassword}\n                type='password'\n                id='confirmPassword'\n                required\n                fluid\n                value={formInput.confirmPassword}\n                label='Confirm Password'\n                placeholder='Confirm Password'\n                onChange={(event) => formChangeHandler(event)}\n            />\n            <div className=\"mt-4\">\n                <Button fluid type=\"submit\">Signup</Button>\n            </div>\n        </Form>\n    );\n};\n\nexport default SignupForm;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Col, Row } from 'reactstrap';\n// import { Message } from 'semantic-ui-react';\nimport SignupForm from './SignupForm/SignupForm';\nimport * as actionCreaters from '../../../store/actions';\nimport { getItem } from '../../../helpers/cookie';\nimport SocialLogin from '../SocialLogin/SocialLogin';\nimport { Link } from 'react-router-dom';\n// import { isObjectNotEmpty } from '../../../helpers/Object';\nimport './Signup.css';\n\nconst Signup = (props) => {\n\n    useEffect(() => {\n        if (getItem('token')) {\n            props.onSetRedirectPath('/');\n        }\n    }, []);\n\n    let authRedirect = null;\n    if (getItem('token')) {\n        authRedirect = <Redirect to=\"/\" />\n    }\n    return (\n        <Col className=\"signup\">\n            <Row\n                style={{\n                    height: '100vh',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }}>\n                {authRedirect}\n                <Col className=\"ml-1\" md={6} lg={3} xs={10}>\n                    <SocialLogin onSocialLogin={(authDetails) => props.onSocialLogin(authDetails)} /><br /><br />\n                    {/* {\n                        isObjectNotEmpty(props.userDetails) && <Message\n                            success\n                            header='Your user registration was successful'\n                            content='You may now log-in with the email you have chosen'\n                        />\n                    } */}\n                    <SignupForm\n                        signup={(signupDetails) => props.onSignup(signupDetails)}\n                        error={props.error}\n                        resetError={() => props.onResetError()}\n                        isLoading={props.isLoading}\n                        userDetails={props.userDetails} /><br />\n                    <div className=\"redirect-to-login text-center mt-3\">\n                        Already a member <Link to=\"/login\">Login</Link>\n                    </div>\n                </Col>\n            </Row>\n        </Col>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        error: state.auth.error,\n        authRedirectPath: state.auth.authRedirectPath,\n        isLoading: state.auth.isLoading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignup: (signupDetails) => dispatch(actionCreaters.signup(signupDetails)),\n        onSetRedirectPath: (path) => dispatch(actionCreaters.setRedirectPath(path)),\n        onResetError: () => dispatch(actionCreaters.authFail(null)),\n        onSocialLogin: (authDetails) => dispatch(actionCreaters.socialLogin(authDetails))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n"],"sourceRoot":""}