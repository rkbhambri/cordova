{"version":3,"sources":["assets/img/user.svg","helpers/messages.js","helpers/Object.js","assets/Cards/Card-4.png","assets/Cards/Card-1.png","assets/Cards/Card-2.png","assets/Cards/Card-3.png","assets/Cards/Card-5.png","assets/Cards/Card-6.jpg","components/Home/SocialDetails/SocialIcons.js","assets/social-icons/Behance.svg","assets/social-icons/Dribble.svg","assets/social-icons/Facebook.svg","assets/social-icons/Instagram.svg","assets/social-icons/Linkedin.svg","assets/social-icons/Pinterest.svg","assets/social-icons/Twitter.svg","assets/social-icons/Youtube.svg","helpers/socialMedia.js","components/MyCards/Cards/Card/Card.js","components/MyCards/Cards/Cards.js","components/MyCards/AddCard/AddCardForm/AddCardForm.js","components/MyCards/AddCard/AddCard.js","components/MyCards/MyCards.js"],"names":["module","exports","messages","socialMedia","name","email","cardName","category","required","invalidEmail","notMatch","passwordFormat","firstName","lastName","mobile","isMobileInvalid","dateOfBirth","summary","schoolName","area","city","fromGrade","toGrade","competitionName","year","standing","videoUrl","title","explanation","tags","participants","teamName","projectName","problemToSolve","reasonToSolveProblem","approachToSolveProblem","technologyUsed","isObjectEmpty","obj","Object","keys","length","isObjectNotEmpty","SocialIcons","props","useState","dribble","facebook","linkedin","behance","instagram","pinterest","twitter","youtubeChannel","placeholder","value","url","setUrl","useEffect","key","trigger","src","style","height","width","className","flowing","hoverable","Column","textAlign","type","transparent","size","platform","color","onChange","event","target","onClick","updateSocialUrl","window","location","pathname","disabled","addToCard","isActive","socialMediaPlatforms","connect","dispatch","onUpdateCardDetails","cardId","cardDetails","actionCreaters","facebookUrl","instagramUrl","linkedinUrl","tiktokUrl","youtubeChannelUrl","isFacebookActive","isInstagramActive","isLinkedinActive","isTiktokActive","isYoutubeChannelActive","setCardDetails","invalidInput","setInvalidInput","editCardId","setEditcardId","Personal","Card1","Professional","Card2","Meetup","Card3","Travel","Card4","Social","Card5","Work","Card6","Office","cards","selectLogoImage","Behance","Dribble","Facebook","Instagram","Linkedin","Pinterest","Twitter","Youtube","console","log","card","social","thumbnailId","borderRadius","backgroundImage","Col","fontSize","Profile_pic","alt","userDetails","md","sm","Divider","horizontal","isDribbleActive","isBehanceActive","isPinterestActive","isTwitterActive","id","prevState","Icon","Row","map","item","xs","getCapitalizeText","activeUrl","invalidInputDetails","parseData","urlValue","urlKey","Button","icon","Cards","state","socialUrl","myCards","onGetSocialUrl","onAddCard","text","cardTypeOptions","twitterUrl","snapchatUrl","whatsappUrl","githubUrl","stackoverflowUrl","dribbleUrl","behanceUrl","upiAddress","paypalUrl","upworkUrl","fiverrUrl","isSnapchatActive","isWhatsappActive","isGithubActive","isStackoverflowActive","isUpiActive","isPaypalActive","isUpworkActive","isFiverrActive","updatedCardDetails","addCard","isEmpty","isUrlAdded","isSocialUrlAdded","toggleAddCardModal","Form","Select","error","fluid","options","textContent","categoryChangeHandler","AddCard","Modal","dimmer","open","isAddCardModalOpen","onClose","closeIcon","Content","Description","home","onGetCards","onEmptyCards","setAddCardModalOpen"],"mappings":"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","file":"static/js/9.97b776cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.7a21cbe9.svg\";","\nexport const messages = {\n    socialMedia: 'Please add atleast one social media',\n    name: 'Name is required',\n    email: 'Email is required',\n    cardName: 'Card Name is required',\n    category: 'Card Category is required',\n    required: 'is required',\n    invalidEmail: 'Please enter a valid email',\n    notMatch: 'Password and Confirm Password not match',\n    passwordFormat: 'At least 6 characters with at least 1 Small & Upper case character, a number & symbol',\n    firstName: 'First name is required',\n    lastName: 'Last name is required',\n    mobile: 'Mobile number is required',\n    isMobileInvalid: 'Mobile number contain 10 digits',\n    dateOfBirth: 'Date Of Birth is required',\n    summary: 'Summary is required',\n    schoolName: 'School name is required',\n    area: 'Area is required',\n    city: 'City is required',\n    fromGrade: 'From class is required',\n    toGrade: 'To Class is required',\n    competitionName: 'Competition name is required',\n    year: 'Year is required',\n    standing: 'Standing position is required',\n    videoUrl: 'Video is required',\n    title: 'Title is required',\n    explanation: 'Explanation is required',\n    tags: 'Tags are required',\n    participants: 'Please add atlease one participant',\n    teamName: 'Please enter your team name',\n    projectName: 'Please enter your project name',\n    problemToSolve: 'Please specify the problem to solve',\n    reasonToSolveProblem: 'Please specify the reason to solve the problem',\n    approachToSolveProblem: 'Please specify your approach to solve the problem',\n    technologyUsed: 'Please specify the list of technologies you want to use'\n};\n","\nexport const isKeyExist = (obj, key) => {\n    return obj.hasOwnProperty(key);\n};\n\nexport const isObjectEmpty = (obj) => {\n    return Object.keys(obj).length === 0;\n};\n\nexport const isObjectNotEmpty = (obj) => {\n    return Object.keys(obj).length > 0;\n};\n","module.exports = __webpack_public_path__ + \"static/media/Card-4.5ac9e53d.png\";","module.exports = __webpack_public_path__ + \"static/media/Card-1.7a8785b4.png\";","module.exports = __webpack_public_path__ + \"static/media/Card-2.edd858ac.png\";","module.exports = __webpack_public_path__ + \"static/media/Card-3.01e03a02.png\";","module.exports = __webpack_public_path__ + \"static/media/Card-5.dae690ee.png\";","module.exports = __webpack_public_path__ + \"static/media/Card-6.8b9075cc.jpg\";","import React, { useState, useEffect } from 'react';\nimport { Icon, Popup, Grid, Input, Image, Button } from 'semantic-ui-react'\n\nconst SocialIcons = (props) => {\n    const [placeholder] = useState({\n        dribble: 'Dribble url',\n        facebook: 'Facebook username',\n        linkedin: 'LinkedIn url',\n        behance: 'Behance url',\n        instagram: 'Instagram username',\n        pinterest: 'Pinterest username',\n        twitter: 'Twitter url',\n        youtubeChannel: 'Youtube channel url'\n    });\n    const [url, setUrl] = useState(props.value);\n\n    useEffect(() => {\n        setUrl(props.value);\n    }, [props.value]);\n\n    const urlChangeHandler = (value) => {\n        setUrl(value);\n    };\n\n    return (\n        <Popup\n            key={props.name}\n            trigger={\n                <Image\n                    src={props.src}\n                    style={{ height: '70px', width: '70px' }}\n                    className={props.className} />\n            }\n            flowing\n            hoverable>\n            <Grid.Column textAlign='center'>\n                <Input\n                    type=\"text\"\n                    transparent\n                    size=\"large\"\n                    placeholder={placeholder[props.platform]}\n                    className=\"border-bottom\"\n                    style={{ color: '#fff' }}\n                    onChange={(event) => urlChangeHandler(event.target.value)}\n                    value={url}\n                />\n                <Icon name=\"check\" style={{ color: 'green' }} className=\"ml-3\" onClick={() => props.updateSocialUrl(url)}></Icon>\n            </Grid.Column>\n            {\n                window.location.pathname !== '/' &&\n                <Grid.Column className=\"pt-3 pb-2\">\n                    <Button\n                        color=\"blue\"\n                        size=\"tiny\"\n                        disabled={!props.value}\n                        onClick={() => props.addToCard()}>{props.isActive ? 'Move From Card' : 'Add To Card'}</Button>\n                </Grid.Column>\n            }\n        </Popup>\n    );\n};\n\nexport default SocialIcons;\n","module.exports = __webpack_public_path__ + \"static/media/Behance.0019100c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Dribble.bf2afd78.svg\";","module.exports = __webpack_public_path__ + \"static/media/Facebook.1f1d3206.svg\";","module.exports = __webpack_public_path__ + \"static/media/Instagram.f414b0ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/Linkedin.a573f23e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Pinterest.69a65581.svg\";","module.exports = __webpack_public_path__ + \"static/media/Twitter.f5afd4b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Youtube.d8b5d210.svg\";","\nexport const socialMediaPlatforms = ['dribble', 'facebook', 'linkedin', 'behance', 'instagram', 'pinterest', 'twitter', 'youtubeChannel'];\n","import React, { useState, useEffect } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { GoBroadcast } from 'react-icons/go';\nimport { Icon, Divider, Button } from 'semantic-ui-react';\nimport './Card.css';\nimport * as actionCreaters from '../../../../store/actions';\nimport { socialMediaPlatforms } from '../../../../helpers/socialMedia';\nimport { getCapitalizeText, parseData } from '../../../../helpers/miscellaneous';\nimport SocialIcons from '../../../Home/SocialDetails/SocialIcons';\nimport Profile_pic from '../../../../assets/img/user.svg';\nimport Card1 from '../../../../assets/Cards/Card-1.png';\nimport Card2 from '../../../../assets/Cards/Card-2.png';\nimport Card3 from '../../../../assets/Cards/Card-3.png';\nimport Card4 from '../../../../assets/Cards/Card-4.png';\nimport Card5 from '../../../../assets/Cards/Card-5.png';\nimport Card6 from '../../../../assets/Cards/Card-6.jpg';\nimport Behance from '../../../../assets/social-icons/Behance.svg';\nimport Dribble from '../../../../assets/social-icons/Dribble.svg';\nimport Facebook from '../../../../assets/social-icons/Facebook.svg';\nimport Instagram from '../../../../assets/social-icons/Instagram.svg';\nimport Linkedin from '../../../../assets/social-icons/Linkedin.svg';\nimport Pinterest from '../../../../assets/social-icons/Pinterest.svg';\nimport Twitter from '../../../../assets/social-icons/Twitter.svg';\nimport Youtube from '../../../../assets/social-icons/Youtube.svg';\n\nconst Card = (props) => {\n\n    const [cardDetails, setCardDetails] = useState({\n        category: '',\n        // thumbnailId: '',\n        facebookUrl: '',\n        instagramUrl: '',\n        linkedinUrl: '',\n        tiktokUrl: '',\n        youtubeChannelUrl: '',\n        isFacebookActive: false,\n        isInstagramActive: false,\n        isLinkedinActive: false,\n        isTiktokActive: false,\n        isYoutubeChannelActive: false\n    });\n    const [invalidInput, setInvalidInput] = useState({});\n\n    const [editCardId, setEditcardId] = useState(false);\n\n    const [cards] = useState({\n        Personal: Card1,\n        Professional: Card2,\n        Meetup: Card3,\n        Travel: Card4,\n        Social: Card5,\n        Work: Card6,\n        Office: Card1\n    });\n\n    const selectLogoImage = {\n        behance: Behance,\n        dribble: Dribble,\n        facebook: Facebook,\n        instagram: Instagram,\n        linkedin: Linkedin,\n        pinterest: Pinterest,\n        twitter: Twitter,\n        youtubeChannel: Youtube,\n    };\n\n    useEffect(() => {\n        console.log('===', props.cardDetails);\n        const card = { ...props.cardDetails };\n        card.social.thumbnailId = ''\n        setCardDetails(card.social);\n    }, [props.cardDetails]);\n\n    const editCardDetails = (id) => {\n        setEditcardId(prevState => !prevState);\n    };\n\n    const addToCard = (activeUrl) => {\n        const card = { ...cardDetails };\n        card[activeUrl] = !card[activeUrl];\n        setCardDetails(card);\n        if (invalidInput.socialMedia) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails.socialMedia;\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    const updateSocialUrl = (urlValue, urlKey) => {\n        const card = { ...cardDetails };\n        card[urlKey] = urlValue;\n        setCardDetails(card);\n        if (invalidInput.socialMedia) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails.socialMedia;\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    const updateCardDetails = () => {\n        setEditcardId(prevState => !prevState);\n        props.onUpdateCardDetails(props.cardDetails.id, cardDetails);\n    };\n\n    return (\n        <div className=\"card mt-4\" style={{ borderRadius: '15px', backgroundImage: `url(${cards[props.cardDetails.category]})` }}>\n            <div className=\"text-center mt-1 font-weight-bold\">\n                {props.cardDetails.category}\n            </div>\n            <Col className=\"text-right mb-2\">\n                <GoBroadcast className=\"mt-1\" style={{ fontSize: '28px' }} />\n                <div className=\"text-center\">\n                    <div className=\"profile-pic\">\n                        <img\n                            src={Profile_pic}\n                            className=\"rounded-circle\"\n                            alt=\"not available\"\n                            style={{ height: '60px', width: '60px' }}\n                        // onError={(event) => event.target.src = defaultUserImage}\n                        />\n                    </div>\n                    <div className=\"name mt-3\">{props.userDetails.name}</div>\n                </div>\n            </Col>\n            <Col\n                className=\"social-details\"\n                md={12}\n                sm={12}>\n                <div className=\"social-icons\">\n                    <Divider horizontal className=\"m-0\">\n\n                        {\n                            cardDetails.isFacebookActive &&\n                            <img\n                                src={Facebook}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isInstagramActive &&\n                            <img\n                                src={Instagram}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isLinkedinActive &&\n                            <img\n                                src={Linkedin}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isTiktokActive &&\n                            <img\n                                src={Facebook}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isDribbleActive &&\n                            <img\n                                src={Dribble}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isBehanceActive &&\n                            <img\n                                src={Behance}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isPinterestActive &&\n                            <img\n                                src={Pinterest}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isTwitterActive &&\n                            <img\n                                src={Twitter}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isYoutubeChannelActive &&\n                            <img\n                                src={Youtube}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                    </Divider>\n                </div>\n            </Col>\n            <div className=\"text-right\" onClick={() => editCardDetails(props.id)}>\n                <Icon name=\"angle down\" style={{ fontSize: '25px' }} />\n            </div>\n            {\n                editCardId &&\n                <Col>\n                    <Row>\n                        {\n                            socialMediaPlatforms.map(item => {\n                                return (\n                                    <Col xs={4} md={4} key={item}>\n                                        <SocialIcons\n                                            src={selectLogoImage[item]}\n                                            platform={item}\n                                            value={cardDetails[`${item}Url`] || ''}\n                                            isActive={cardDetails[`is${getCapitalizeText(item)}Active`]}\n                                            addToCard={() => addToCard(`is${getCapitalizeText(item)}Active`)}\n                                            updateSocialUrl={(urlValue) => updateSocialUrl(urlValue, `${item}Url`)}\n                                        />\n                                    </Col>\n                                );\n                            })\n                        }\n                    </Row><br />\n                    <div className=\"text-center mb-3\">\n                        <Button\n                            className=\"pl-4 pr-4\"\n                            size=\"tiny\"\n                            icon=\"check\"\n                            style={{ color: 'green', borderRadius: '8px' }}\n                            onClick={() => updateCardDetails()} />\n                    </div>\n                </Col>\n            }\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCardDetails: (cardId, cardDetails) => dispatch(actionCreaters.updateCardDetails(cardId, cardDetails))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Card);\n","import React from 'react';\nimport Card from './Card/Card'\n\nconst Cards = (props) => {\n    return (\n        <div className=\"cards\">\n            {\n                props.cards.map(item => {\n                    return (\n                        <Card key={item.id} cardDetails={item} userDetails={props.userDetails} />\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default Cards;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Col, Row } from 'reactstrap';\nimport { Form, Button, Select } from 'semantic-ui-react';\nimport * as actionCreaters from '../../../../store/actions';\nimport { parseData, isEmpty, getCapitalizeText } from '../../../../helpers/miscellaneous';\nimport { messages } from '../../../../helpers/messages';\nimport { isObjectEmpty, isObjectNotEmpty } from '../../../../helpers/Object';\nimport { socialMediaPlatforms } from '../../../../helpers/socialMedia';\nimport SocialIcons from '../../../Home/SocialDetails/SocialIcons';\nimport Behance from '../../../../assets/social-icons/Behance.svg';\nimport Dribble from '../../../../assets/social-icons/Dribble.svg';\nimport Facebook from '../../../../assets/social-icons/Facebook.svg';\nimport Instagram from '../../../../assets/social-icons/Instagram.svg';\nimport Linkedin from '../../../../assets/social-icons/Linkedin.svg';\nimport Pinterest from '../../../../assets/social-icons/Pinterest.svg';\nimport Twitter from '../../../../assets/social-icons/Twitter.svg';\nimport Youtube from '../../../../assets/social-icons/Youtube.svg';\n\nconst AddCardForm = (props) => {\n\n    const [cardTypeOptions] = useState([\n        { key: 'af', value: 'Meetup', text: 'Meetup' },\n        { key: 'ax', value: 'Personal', text: 'Personal' },\n        { key: 'al', value: 'al', text: 'Professional' },\n        { key: 'dz', value: 'dz', text: 'Travel' },\n        { key: 'as', value: 'as', text: 'Social' },\n        { key: 'ad', value: 'ad', text: 'Work' },\n        { key: 'ao', value: 'ao', text: 'Office' }\n    ]);\n\n    const selectLogoImage = {\n        behance: Behance,\n        dribble: Dribble,\n        facebook: Facebook,\n        instagram: Instagram,\n        linkedin: Linkedin,\n        pinterest: Pinterest,\n        twitter: Twitter,\n        youtubeChannel: Youtube,\n    }\n\n    const [cardDetails, setCardDetails] = useState({\n        name: '',\n        category: '',\n        thumbnailId: '',\n        facebookUrl: '',\n        instagramUrl: '',\n        linkedinUrl: '',\n        tiktokUrl: '',\n        youtubeChannelUrl: '',\n        twitterUrl: '',\n        snapchatUrl: '',\n        whatsappUrl: '',\n        githubUrl: '',\n        stackoverflowUrl: '',\n        dribbleUrl: '',\n        behanceUrl: '',\n        upiAddress: '',\n        paypalUrl: '',\n        upworkUrl: '',\n        fiverrUrl: '',\n        isFacebookActive: false,\n        isInstagramActive: false,\n        isLinkedinActive: false,\n        isTiktokActive: false,\n        isYoutubeChannelActive: false,\n        isTwitterActive: false,\n        isSnapchatActive: false,\n        isWhatsappActive: false,\n        isGithubActive: false,\n        isStackoverflowActive: false,\n        isDribbleActive: false,\n        isBehanceActive: false,\n        isUpiActive: false,\n        isPaypalActive: false,\n        isUpworkActive: false,\n        isFiverrActive: false\n    });\n    const [invalidInput, setInvalidInput] = useState({});\n\n    useEffect(() => {\n        props.onGetSocialUrl();\n    }, []);\n\n    useEffect(() => {\n        if (isObjectNotEmpty(props.socialUrl)) {\n            const updatedCardDetails = { ...cardDetails, ...props.socialUrl };\n            setCardDetails(updatedCardDetails);\n        }\n    }, [props.socialUrl]);\n\n    const categoryChangeHandler = (event) => {\n        const card = { ...cardDetails };\n        card.category = event.target.textContent;\n        setCardDetails(card);\n        if (invalidInput.category) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails.category;\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    const addToCard = (activeUrl) => {\n        const card = { ...cardDetails };\n        card[activeUrl] = !card[activeUrl];\n        setCardDetails(card);\n        if (invalidInput.socialMedia) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails.socialMedia;\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    const updateSocialUrl = (urlValue, urlKey) => {\n        const card = { ...cardDetails };\n        card[urlKey] = urlValue;\n        setCardDetails(card);\n        if (invalidInput.socialMedia) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails.socialMedia;\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    // const selectSocialLink = (social) => {\n    //     const card = { ...cardDetails };\n    //     card[social] = !card[social];\n    //     setCardDetails(card);\n    // };\n\n    const isSocialUrlAdded = () => {\n        let isUrlAdded = false;\n        for (let key in cardDetails) {\n            if (cardDetails[key] === true) {\n                isUrlAdded = true;\n            }\n        }\n        return isUrlAdded;\n    };\n\n    const addCard = () => {\n        const invalidInputDetails = parseData(invalidInput);\n\n        if (isEmpty(cardDetails.category)) {\n            invalidInputDetails.category = `${messages.category}`;\n        }\n        if (!isSocialUrlAdded()) {\n            invalidInputDetails.socialMedia = `${messages.socialMedia}`;\n        }\n\n        setInvalidInput(invalidInputDetails);\n\n        if (isObjectEmpty(invalidInputDetails)) {\n            props.toggleAddCardModal();\n            props.onAddCard(cardDetails);\n        }\n    };\n\n    return (\n        <Form>\n            <div className=\"card-type mt-2\">\n                <h5>Card Category</h5>\n                <Select\n                    error={invalidInput.category ? true : false}\n                    fluid\n                    placeholder='Select Card Category'\n                    options={cardTypeOptions}\n                    onChange={(event) => categoryChangeHandler(event)} />\n                {\n                    invalidInput.category && <span className=\"text-danger pl-1\">{invalidInput.category}</span>\n                }\n            </div><br />\n            <div className=\"social-links\">\n                <h3>Social Links</h3>\n                {\n                    invalidInput.socialMedia && <span className=\"text-danger pl-1\">{invalidInput.socialMedia}</span>\n                }\n                <Row>\n                    {\n                        socialMediaPlatforms.map(item => {\n                            return (\n                                <Col xs={4} md={4} key={item}>\n                                    <SocialIcons\n                                        src={selectLogoImage[item]}\n                                        platform={item}\n                                        value={cardDetails[`${item}Url`] || ''}\n                                        isActive={cardDetails[`is${getCapitalizeText(item)}Active`]}\n                                        addToCard={() => addToCard(`is${getCapitalizeText(item)}Active`)}\n                                        updateSocialUrl={(urlValue) => updateSocialUrl(urlValue, `${item}Url`)} />\n                                </Col>\n                            );\n                        })\n                    }\n                </Row>\n            </div>\n            <div className=\"text-right mt-4\">\n                <Button onClick={() => addCard()}>Add</Button>\n            </div>\n        </Form>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        socialUrl: state.myCards.socialUrl\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetSocialUrl: () => dispatch(actionCreaters.getSocialUrl()),\n        onAddCard: (cardDetails) => dispatch(actionCreaters.addCard(cardDetails))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCardForm);\n","import React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport AddCardForm from './AddCardForm/AddCardForm'\n\nconst AddCard = (props) => {\n    return (\n        <Modal\n            dimmer={true}\n            open={props.isAddCardModalOpen}\n            onClose={props.toggleAddCardModal}\n            className=\"add-card-details\"\n            closeIcon\n            id=\"modal\">\n            <Modal.Content>\n                <Modal.Description>\n                    <AddCardForm toggleAddCardModal={() => props.toggleAddCardModal()} />\n                </Modal.Description><br />\n            </Modal.Content>\n        </Modal>\n    );\n};\n\nexport default AddCard;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport * as actionCreaters from '../../store/actions';\nimport { Col, Row } from 'reactstrap';\nimport Cards from './Cards/Cards';\nimport AddCard from './AddCard/AddCard';\nimport './MyCards.css';\n\nconst MyCards = (props) => {\n\n    const [isAddCardModalOpen, setAddCardModalOpen] = useState(false);\n\n    const toggleAddCardModal = () => {\n        setAddCardModalOpen(prevState => !prevState);\n    };\n\n    useEffect(() => {\n        props.onGetCards();\n        return (() => {\n            props.onEmptyCards();\n        })\n    }, []);\n\n    return (\n        <Col className=\"my-cards pt-4 pb-5\">\n            <AddCard\n                isAddCardModalOpen={isAddCardModalOpen}\n                toggleAddCardModal={() => toggleAddCardModal()} />\n            <Row className=\"mb-3\">\n                <Col xs={8}>\n                    <h3 className=\"text-white pl-1\">My Cards</h3>\n                </Col>\n                <Col className=\"add-icon text-right\">\n                    <Button\n                        size=\"tiny\"\n                        icon=\"add\"\n                        style={{ color: '#000', borderRadius: '8px' }}\n                        onClick={() => toggleAddCardModal()} />\n                </Col>\n            </Row>\n            <Cards cards={props.cards} userDetails={props.userDetails} />\n            {/* <Transactions transactions={props.transactions} /> */}\n        </Col>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        cards: state.myCards.cards,\n        userDetails: state.home.userDetails\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetCards: () => dispatch(actionCreaters.getCards()),\n        onEmptyCards: () => dispatch(actionCreaters.emptyCards()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCards);\n"],"sourceRoot":""}