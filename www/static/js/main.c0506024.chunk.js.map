{"version":3,"sources":["config.js","assets/img/something-went-wrong.gif","store/actions/actionTypes.js","components/PageSpinner/PageSpinner.js","components/Header/Header.js","components/Snackbar/Snackbar.js","components/MainLayout/MainLayout.js","ErrorBoundary/ErrorBoundary.js","Routes.js","App.js","store/utility.js","store/reducers/Auth.js","store/reducers/Home.js","store/reducers/MyCards.js","store/reducers/MainLayout.js","store/reducers/Contests.js","store/reducers/Leaders.js","helpers/array.js","store/reducers/Wallet.js","store/reducers/Account.js","index.js","httpInstance/axios.js","store/actions/Auth.js","url/Auth.js","store/actions/Leaders.js","store/actions/MainLayout.js","url/MainLayout.js","url/MyCards.js","store/actions/MyCards.js","url/Home.js","store/actions/Home.js","helpers/cookie.js","components/Snackbar/Snackbar.module.css","ErrorBoundary/ErrorBoundary.module.css","helpers/miscellaneous.js"],"names":["axiosBaseUrl","googleClientId","encodeURIComponent","facebookAppId","module","exports","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_REDIRECT_PATH","SET_OTP","EMPTY_TOKEN","UPDATE_SET_PASSWORD_STATUS","SET_REQUEST_TO_SET_PASSWORD_ID","UPDATE_LOADING_STATUS","SET_USER_DETAILS","SET_USER_SOCIAL_URL","EMPTY_USER_PROFILE","SET_CARDS","EMPTY_CARDS","SET_SOCIAL_URL","UPDATE_CARDS","SET_QUESTIONS","SET_LEADERS","SET_WALLET_DETAILS","SET_TRANSACTIONS","SET_UNSETTLED_CONTESTS","SET_SETTLED_CONTESTS","SET_SNACKBAR_MESSAGE","PageSpinner","color","Row","style","height","justifyContent","alignItems","maxWidth","Dimmer","active","inverted","content","Header","props","className","background","id","flexDirection","flexWrap","to","connect","dispatch","onSetSnackbarMessage","message","actionCreaters","useEffect","setTimeout","checkInternet","emptySnackbar","error","Styles","snackbar","show","join","Button","close","marginLeft","onClick","state","mainLayout","userDetails","home","onUpdateUserLocation","location","useState","isOnline","setOnlineStatus","navigator","geolocation","getCurrentPosition","onSuccess","onError","position","alert","coords","latitude","longitude","code","updateOnlineStatus","onLine","Col","xs","lg","md","paddingLeft","paddingRight","isMobileView","children","window","addEventListener","ErrorBoundary","hasError","info","console","log","this","classes","src","errorImage","alt","Component","Login","React","lazy","Signup","Engage","MyCards","ReceivedCards","Home","unauthenticated_routes","path","component","authenticated_routes","App","routes","getRedirectPath","routeExist","i","length","pathname","redirectDefaultRoute","getItem","Suspense","fallback","map","key","exact","breakpoint","withRouter","auth","isAuthenticated","token","authRedirectPath","superAdminDetails","onSetRedirectPath","updateObject","oldObject","updatedProperties","initialState","userId","adminDetails","otp","requestToSetPassword","isPasswordSetSuccessfully","isLoading","authSuccess","action","authFail","authLogout","updateLoadingStatus","status","setRedirectPath","setOtp","emptyToken","setRequestToSetPasswordId","updateSetPasswordStatus","Auth","type","actionTypes","userSocialUrl","setUserDetails","setUserSocialUrl","emptyUserProfile","cards","socialUrl","setCards","updateCards","updateCardsData","concat","cardDetails","setSocialUrl","emptyCards","setSnackbarMessage","MainLayout","questions","questionText","entryFee","contestId","options","optionText","betCountOnOption","setQuestions","Contests","leaders","isLeadersEmpty","setLeaders","arr","Leaders","walletDetails","transactions","setWalletDetails","details","wallet","setTransactions","Wallet","unsettledContests","settledContests","setUnsettledContests","setSettledContests","Account","rootReducer","combineReducers","myCards","contests","account","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","basename","process","split","pop","ReactDOM","render","document","getElementById","instance","axios","create","baseURL","headers","interceptors","request","use","response","login","loginDetails","post","then","data","entity","role","roles","setItem","catch","signup","signupDetails","socialLogin","authDetails","getLeaders","get","updateUserLocation","put","cardsUrl","getCards","user","getSocialUrl","addCard","updateCardDetails","cardId","cardDetailsUrl","userProfileUrl","getUserProfile","social","updateUserProfile","profileDetails","updateSocialUrl","socialPlatform","Cookies","meta","localStorage","JSON","parse","hasOwnProperty","value","stringify","clearItems","clear","test","userAgent","parseData","getCapitalizeText","text","replace","l","toUpperCase","isEmpty","item","trim","isEqual","item1","item2","toLowerCase","convertDateFormat","date","customDateFormat","month","Date","getMonth","day","getDate","getFullYear","convertToTimestamp","getTime"],"mappings":"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","file":"static/js/main.c0506024.chunk.js","sourcesContent":["// export const axiosBaseUrl = 'http://13.126.172.69:3000';\nexport const axiosBaseUrl = process.env.NODE_ENV !== 'production' ? 'https://admin-359bf839.localhost.run/' : 'https://admin-359bf839.localhost.run/';\n\nconst appUrl = encodeURIComponent(process.env.NODE_ENV !== 'production' ? 'http://13.235.50.69:3000/' : 'http://api.league-app.com/');\n\nexport const facebookUrl = 'https://www.facebook.com/dialog/share?app_id=162911467985829&display=popup&u=' + appUrl;\nexport const LinkedInUrl = '?mini=true&source=' + appUrl;\n\nexport const googleClientId = process.env.NODE_ENV !== 'production' ?\n    '366862635690-ecl51tttjto9kdjgnt1te6hkl5aol9id.apps.googleusercontent.com'\n    :\n    '923778317040-l3qdops5rimpbmg5fclhlk8kk0g6i6p0.apps.googleusercontent.com';\n\nexport const facebookAppId = process.env.NODE_ENV !== 'production' ? '880883362326999' : '508741089833759';","module.exports = __webpack_public_path__ + \"static/media/something-went-wrong.cca82265.gif\";","/*\n * Define which type of action to be dispatched to reducer\n */\n\n\n// AUTH\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH';\nexport const SET_USER_PROFILE_DETAILS = 'SET_USER_PROFILE_DETAILS';\nexport const SET_OTP = 'SET_OTP';\nexport const EMPTY_TOKEN = 'EMPTY_TOKEN';\nexport const UPDATE_SET_PASSWORD_STATUS = 'UPDATE_SET_PASSWORD_STATUS';\n\nexport const SET_REQUEST_TO_SET_PASSWORD_ID = 'SET_REQUEST_TO_SET_PASSWORD_ID';\n\nexport const UPDATE_LOADING_STATUS = 'UPDATE_LOADING_STATUS';\n\n// For Home\nexport const SET_USER_DETAILS = 'SET_USER_DETAILS';\nexport const SET_USER_SOCIAL_URL = 'SET_USER_SOCIAL_URL';\nexport const EMPTY_USER_PROFILE = 'EMPTY_USER_PROFILE';\n\n// For My Cards\nexport const SET_CARDS = 'SET_CARDS';\nexport const EMPTY_CARDS = 'EMPTY_CARDS';\nexport const SET_SOCIAL_URL = 'SET_SOCIAL_URL';\nexport const UPDATE_CARDS = 'UPDATE_CARDS';\n\n// For Contests\n\nexport const SET_QUESTIONS = 'SET_QUESTIONS';\n\n// For Leaders\nexport const SET_LEADERS = 'SET_LEADERS'\n\n// For Wallet\nexport const SET_WALLET_DETAILS = 'SET_WALLET_DETAILS';\nexport const SET_TRANSACTIONS = 'SET_TRANSACTIONS';\n\n// For Account\nexport const SET_UNSETTLED_CONTESTS = 'SET_UNSETTLED_CONTESTS';\nexport const SET_SETTLED_CONTESTS = 'SET_SETTLED_CONTESTS';\n\n// Snackbar Message\nexport const SET_SNACKBAR_MESSAGE = 'SET_SNACKBAR_MESSAGE';\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Row } from 'reactstrap';\nimport { Dimmer, Loader as Loading } from 'semantic-ui-react';\n\nconst PageSpinner = ({ color = 'primary' }) => {\n    return (\n        <Row\n            style={{\n                height: '100vh',\n                justifyContent: 'center',\n                alignItems: 'center',\n                maxWidth: '100%'\n            }}>\n            <Dimmer active inverted>\n                <Loading inverted content='Loading' />\n            </Dimmer>\n        </Row>\n    );\n};\n\nPageSpinner.propTypes = {\n    color: PropTypes.oneOf([\n        'primary',\n        'secondary',\n        'success',\n        'danger',\n        'warning',\n        'info',\n        'light',\n        'dark',\n    ]),\n};\n\nexport default PageSpinner;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = (props) => {\n    return (\n        <nav\n            className={`navbar navbar-expand-md navbar-dark fixed-bottom`}\n            style={{ background: '#313648' }}>\n            <div className=\"w-100\" id=\"navbarCollapse\">\n                <div className=\"navbar-nav pt-2 pb-2\" style={{ flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' }}>\n                    <NavLink to=\"/\" className=\"nav-item nav-link p-2\">\n                        {/* <img src={Img} style={{ width: '30px', height: '30px' }} alt=\"img removed\" /><br /> */}\n                        Home\n                    </NavLink>\n                    <NavLink to=\"/engage\" className=\"nav-item nav-link p-2\">\n                        {/* <img src={Img} style={{ width: '30px', height: '30px' }} alt=\"img removed\" /><br /> */}\n                        Engage\n                    </NavLink>\n                    <NavLink to=\"/my-cards\" className=\"nav-item nav-link p-2\">\n                        {/* <img src={Img} style={{ width: '30px', height: '30px' }} alt=\"img removed\" /><br /> */}\n                        My Cards\n                    </NavLink>\n                    <NavLink to=\"/received-cards\" className=\"nav-item nav-link p-2\">\n                        {/* <img src={Img} style={{ width: '30px', height: '30px' }} alt=\"img removed\" /><br /> */}\n                        Received\n                    </NavLink>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default Header;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreaters from '../../store/actions';\nimport Styles from './Snackbar.module.css';\nimport { Button } from \"reactstrap\";\n\nconst Snackbar = (props) => {\n\n    useEffect(() => {\n        setTimeout(() => {\n            props.onSetSnackbarMessage(null);\n            props.checkInternet && props.emptySnackbar();\n        }, 3000);\n    }, []);\n\n    return (\n        <div className={props.error ? [Styles.snackbar, Styles.show].join(\" \") : Styles.snackbar}>\n            <Button\n                close\n                style={{ color: '#fff', marginLeft: '35px' }}\n                onClick={() => {\n                    props.onSetSnackbarMessage(null);\n                    props.checkInternet && props.emptySnackbar();\n                }}></Button>\n            {props.error}\n        </div>\n    )\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSetSnackbarMessage: (message) => dispatch(actionCreaters.setSnackbarMessage(message))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Snackbar);","import React, { useState, useEffect } from 'react';\nimport { Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actionCreaters from '../../store/actions';\nimport { isMobileView } from '../../helpers/miscellaneous';\nimport Header from '../Header/Header';\nimport Snackbar from '../Snackbar/Snackbar';\n\nconst MainLayout = (props) => {\n    const [isOnline, setOnlineStatus] = useState(null);\n\n    useEffect(() => {\n        // getMyLocation();\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\n    }, []);\n\n    const onSuccess = (position) => {\n        alert('==latitude===', position.coords.latitude)\n        props.onUpdateUserLocation({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n        })\n        // alert('Latitude: ' + position.coords.latitude + '\\n' +\n        //     'Longitude: ' + position.coords.longitude + '\\n' +\n        //     'Altitude: ' + position.coords.altitude + '\\n' +\n        //     'Accuracy: ' + position.coords.accuracy + '\\n' +\n        //     'Altitude Accuracy: ' + position.coords.altitudeAccuracy + '\\n' +\n        //     'Heading: ' + position.coords.heading + '\\n' +\n        //     'Speed: ' + position.coords.speed + '\\n' +\n        //     'Timestamp: ' + position.timestamp + '\\n');\n    };\n\n    // onError Callback receives a PositionError object\n    //\n    const onError = (error) => {\n        alert('code: ' + error.code + '\\n' +\n            'message: ' + error.message + '\\n');\n    }\n\n\n    const updateOnlineStatus = () => {\n        setOnlineStatus(navigator.onLine);\n    };\n\n    const emptySnackbar = () => {\n        setOnlineStatus(null);\n    };\n\n    const getMyLocation = () => {\n        const location = window.navigator && window.navigator.geolocation\n\n        if (location) {\n            location.getCurrentPosition((position) => {\n                props.onUpdateUserLocation({\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude\n                })\n            }, (error) => {\n                // setLocation({\n                //     latitude: 'err-latitude',\n                //     longitude: 'err-longitude'\n                // })\n            })\n        }\n    };\n\n    const checkInternetConnection = () => {\n        window.addEventListener('online', () => updateOnlineStatus());\n        window.addEventListener('offline', () => updateOnlineStatus());\n        if (isOnline) {\n            return (\n                <Snackbar\n                    error='Back Online !'\n                    checkInternet=\"true\"\n                    emptySnackbar={() => emptySnackbar()}\n                />\n            );\n        }\n        if (isOnline === false) {\n            return (\n                <Snackbar\n                    error='You are Offline !'\n                    checkInternet=\"true\"\n                    emptySnackbar={() => emptySnackbar()}\n                />\n            );\n        }\n    };\n\n    // props.token && showPromptMessage();\n    return (\n        <Col className=\"main-layout offset-md-4\" xs={12} lg={4} md={4} style={{ paddingLeft: '0px', paddingRight: '0px' }}>\n            {\n                props.message &&\n                <Snackbar error={props.message} />\n            }\n            {\n                isMobileView() ?\n                    <>\n                        {props.children}<br /><br /><br />\n                        <Header />\n                    </>\n                    :\n                    <>\n                        <Header />\n                        {props.children}\n                    </>\n            }\n            {/* Check Internet Connection */}\n            {checkInternetConnection()}\n        </Col>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        message: state.mainLayout.message,\n        userDetails: state.home.userDetails\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateUserLocation: (location) => dispatch(actionCreaters.updateUserLocation(location))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n","import React, { Component } from 'react';\nimport classes from './ErrorBoundary.module.css';\nimport errorImage from '../assets/img/something-went-wrong.gif';\n\nclass ErrorBoundary extends Component {\n\n    state = {\n        hasError: false\n    };\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    };\n\n    componentDidCatch(error, info) {\n        console.log('===error===', error, '===info===', info)\n        // sendErrorInfo(error, info.componentStack);\n    };\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div className={classes['wrong-outer']}>\n                    <div className={classes['wrong-inner']}>\n                        <img className={classes['img-went-wrong']} src={errorImage} alt='KONTIKI LABS' />\n                        <h2>Oops! Looks like something went wrong.</h2>\n                        <p>Give us a few moments to look in to it.</p>\n                    </div>\n                </div>\n            );\n        }\n        return this.props.children;\n    };\n};\n\nexport default ErrorBoundary;\n","import React from 'react';\nconst Login = React.lazy(() => import('./components/Auth/Login/Login'));\nconst Signup = React.lazy(() => import('./components/Auth/Signup/Signup'));\nconst Engage = React.lazy(() => import('./components/Engage/Engage'));\nconst MyCards = React.lazy(() => import('./components/MyCards/MyCards'));\nconst ReceivedCards = React.lazy(() => import('./components/ReceivedCards/ReceivedCards'));\nconst Home = React.lazy(() => import('./components/Home/Home'));\n\nexport const unauthenticated_routes = [\n    {\n        path: '/login',\n        component: Login\n    },\n    {\n        path: '/signup',\n        component: Signup\n    }\n];\n\nexport const authenticated_routes = [\n    {\n        path: '/',\n        component: Home\n    },\n    {\n        path: '/engage',\n        component: Engage\n    },\n    {\n        path: '/my-cards',\n        component: MyCards\n    },\n    {\n        path: '/received-cards',\n        component: ReceivedCards\n    }\n];\n\nexport const authenticated_super_admin_routes = [\n    {\n        path: '/admin',\n        component: Login\n    },\n];","// import GAListener from 'components/GAListener';\nimport React, { Component } from 'react';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PageSpinner from './components/PageSpinner/PageSpinner';\nimport MainLayout from './components/MainLayout/MainLayout';\nimport * as actionCreaters from './store/actions';\nimport { getItem } from './helpers/cookie';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary'\n// import Loader from './components/Loader/Loader';\n// const ErrorBoundary = React.lazy(() => import('./ErrorBoundary/ErrorBoundary'));\nimport { authenticated_routes, unauthenticated_routes } from './Routes';\nimport './styles/reduction.scss';\n\nclass App extends Component {\n\n    state = {\n        path: '',\n        routes: []\n    };\n\n    getRedirectPath = (routes) => {\n        let routeExist = false;\n        for (let i = 0; i < routes.length; i++) {\n            if (routes[i].path === this.props.location.pathname) {\n                routeExist = true;\n            }\n        }\n        const redirectDefaultRoute = getItem('token') ? '/' : '/login';\n        return routeExist ? this.props.location.pathname : redirectDefaultRoute\n    }\n\n    render() {\n\n\n        // let routes = (\n        //     <MainLayout breakpoint={this.props.breakpoint}>\n        //         <React.Suspense fallback={<Loader />} >\n        //             {\n        //                 authenticated_routes.map(({ path, component }, key) => <Route exact path={path} component={component} key={key} />)\n        //             }\n        //             <Redirect to={this.getRedirectPath(authenticated_routes)} />\n        //         </React.Suspense>\n        //     </MainLayout>\n        // );\n\n        // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImE5ZGVlZWYwLTY0ZmItMTFlYS04NDUwLTAzZGIxMWYzODQ3NiIsIm5hbWUiOiJUZXN0IiwiZW1haWwiOiJ0ZXN0QGdtYWlsLmNvbSIsIm1vYmlsZSI6Ijc1MzY3ODkwMjAiLCJpYXQiOjE1ODQwODQyNjV9.NAWb4CVez9p1Ao1eVoF2Q4JT1pjFnmvx08hsTQRBMos'\n        // const id = 'a9deeef0-64fb-11ea-8450-03db11f38476';\n        // console.log('==token===', token, '===id===', id);\n\n        let routes = (\n            <React.Suspense fallback={<PageSpinner />} >\n                {\n                    unauthenticated_routes.map(({ path, component }, key) => <Route exact path={path} component={component} key={key} />)\n                }\n                <Redirect to={this.getRedirectPath(unauthenticated_routes)} />\n            </React.Suspense>\n        );\n\n        if (getItem('token')) {\n            routes = (\n                <>\n                    <MainLayout breakpoint={this.props.breakpoint}>\n                        <React.Suspense fallback={<PageSpinner />} >\n                            {\n                                authenticated_routes.map(({ path, component }, key) => <Route exact path={path} component={component} key={key} />)\n                            }\n                        </React.Suspense>\n                    </MainLayout>\n                    <Redirect to={this.getRedirectPath(authenticated_routes)} />\n                </>\n            );\n        }\n\n        return (\n            <ErrorBoundary>\n                <Switch>\n                    {routes}\n                </Switch>\n            </ErrorBoundary>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        authRedirectPath: state.auth.authRedirectPath,\n        superAdminDetails: state.auth.superAdminDetails\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSetRedirectPath: (path) => dispatch(actionCreaters.setRedirectPath(path))\n    };\n};\n\nexport default withRouter((connect(mapStateToProps, mapDispatchToProps)(App)));\n// withRouter(connect(mapStateToProps, mapDispatchToProps)(AuthorizationCheck(App, axios)));\n","/*\n * This is the basic function vastly used in in reducers to update or concatinate\n * their old object with new properties\n */\n\nexport const updateObject = (oldObject, updatedProperties) => {\n\treturn {\n\t\t...oldObject,\n\t\t...updatedProperties\n\t};\n};\n","/*\n * This file contains store (accessible to all components) which get manipulated based on dispatched actions for Authentication\n */\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    adminDetails: {},\n    authRedirectPath: '/admin',\n    otp: '',\n    requestToSetPassword: '',\n    userDetails: {},\n    isPasswordSetSuccessfully: false,\n    isLoading: false\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        adminDetails: action.adminDetails,\n        token: action.adminDetails.token,\n        userId: action.adminDetails.id,\n        authRedirectPath: '/'\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null,\n        userId: null,\n        error: null,\n        adminDetails: {},\n        authRedirectPath: '/onboard',\n        otp: '',\n        requestToSetPassword: '',\n        userDetails: {},\n        isPasswordSetSuccessfully: false,\n        isLoading: false\n    });\n};\n\nconst updateLoadingStatus = (state, action) => {\n    return updateObject(state, {\n        isLoading: action.status\n    });\n};\n\nconst setRedirectPath = (state, action) => {\n    return updateObject(state, {\n        authRedirectPath: action.path\n    });\n};\n\nconst setOtp = (state, action) => {\n    return updateObject(state, {\n        otp: action.otp\n    });\n};\n\nconst emptyToken = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n};\n\nconst setRequestToSetPasswordId = (state, action) => {\n    return updateObject(state, {\n        requestToSetPassword: action.requestToSetPassword\n    });\n};\n\nconst updateSetPasswordStatus = (state, action) => {\n    return updateObject(state, {\n        isPasswordSetSuccessfully: action.status\n    });\n};\n\nconst Auth = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL:\n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT:\n            return authLogout(state, action);\n        case actionTypes.UPDATE_LOADING_STATUS:\n            return updateLoadingStatus(state, action);\n        case actionTypes.SET_REDIRECT_PATH:\n            return setRedirectPath(state, action);\n        case actionTypes.SET_OTP:\n            return setOtp(state, action);\n        case actionTypes.EMPTY_TOKEN:\n            return emptyToken(state, action);\n        case actionTypes.SET_REQUEST_TO_SET_PASSWORD_ID:\n            return setRequestToSetPasswordId(state, action);\n        case actionTypes.UPDATE_SET_PASSWORD_STATUS:\n            return updateSetPasswordStatus(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Auth;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    userDetails: {},\n    userSocialUrl: {}\n};\n\nconst setUserDetails = (state, action) => {\n    return updateObject(state, {\n        userDetails: action.userDetails\n    });\n};\n\nconst setUserSocialUrl = (state, action) => {\n    return updateObject(state, {\n        userSocialUrl: action.userSocialUrl\n    });\n};\n\nconst emptyUserProfile = (state, action) => {\n    return updateObject(state, {\n        userDetails: {},\n        userSocialUrl: {}\n    });\n};\n\nconst Home = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_USER_DETAILS:\n            return setUserDetails(state, action);\n        case actionTypes.SET_USER_SOCIAL_URL:\n            return setUserSocialUrl(state, action);\n        case actionTypes.EMPTY_USER_PROFILE:\n            return emptyUserProfile(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Home;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    cards: [],\n    socialUrl: {}\n};\n\nconst setCards = (state, action) => {\n    return updateObject(state, {\n        cards: action.cards\n    });\n};\n\nconst updateCards = (state, action) => {\n    const updateCardsData = state.cards.concat(action.cardDetails);\n    return updateObject(state, {\n        cards: updateCardsData\n    });\n};\n\nconst setSocialUrl = (state, action) => {\n    return updateObject(state, {\n        socialUrl: action.socialUrl\n    });\n};\n\nconst emptyCards = (state, action) => {\n    return updateObject(state, {\n        cards: []\n    });\n};\n\nconst MyCards = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_CARDS:\n            return setCards(state, action);\n        case actionTypes.EMPTY_CARDS:\n            return emptyCards(state, action);\n        case actionTypes.UPDATE_CARDS:\n            return updateCards(state, action);\n        case actionTypes.SET_SOCIAL_URL:\n            return setSocialUrl(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default MyCards;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    message: null\n};\n\nconst setSnackbarMessage = (state, action) => {\n    return updateObject(state, {\n        message: action.message\n    });\n};\n\nconst MainLayout = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_SNACKBAR_MESSAGE:\n            return setSnackbarMessage(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default MainLayout;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    // questions: [],\n    questions: [{\n        questionText: 'hello real madrid blah blah blah blah v v blah',\n        entryFee: 6578,\n        contestId: 'J71282',\n        options: [{\n            id: '5746154123',\n            optionText: 'this is option1 this is testing long text option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        }]\n    },\n    {\n        questionText: 'hello real madrid222',\n        entryFee: 6578,\n        contestId: 'J71282',\n        options: [{\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        }]\n    },\n    {\n        questionText: 'hello real madrid3',\n        entryFee: 6578,\n        contestId: 'J71282',\n        options: [{\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        }]\n    }]\n};\n\nconst setQuestions = (state, action) => {\n    return updateObject(state, {\n        questions: action.questions\n    });\n};\n\nconst Contests = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_QUESTIONS:\n            return setQuestions(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Contests;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nimport { isArrayEmpty } from '../../helpers/array';\n\nconst initialState = {\n    leaders: [],\n    isLeadersEmpty: false\n};\n\nconst setLeaders = (state, action) => {\n    return updateObject(state, {\n        leaders: action.leaders,\n        isLeadersEmpty: isArrayEmpty(action.leaders)\n    });\n};\n\nconst Leaders = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_LEADERS:\n            return setLeaders(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Leaders;","\nexport const isArrayEmpty = (arr) => {\n    return arr.length === 0;\n};\n\nexport const isArrayNotEmpty = (arr) => {\n    return arr.length > 0;\n};\n\nexport const isIncludes = (array, value) => {\n    return array.includes(value);\n};\nexport const arraySplice = (array, spliceAt) => {\n    return array.splice(spliceAt, 0);\n};\n\nexport const arraySlice = (array, spliceAt, limit) => {\n    return array.slice(spliceAt, limit);\n};\n\nexport const arrayPush = (array, data) => {\n    return array.push(data);\n};\n\nexport const arrayConcat = (array, data) => {\n    return array.concat(data);\n};\n\nexport const arrayPop = (array) => {\n    return array.pop();\n};\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    walletDetails: {},\n    transactions: []\n};\n\nconst setWalletDetails = (state, action) => {\n    return updateObject(state, {\n        walletDetails: action.details.wallet\n    });\n};\n\nconst setTransactions = (state, action) => {\n    return updateObject(state, {\n        transactions: action.transactions\n    });\n};\n\nconst Wallet = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_WALLET_DETAILS:\n            return setWalletDetails(state, action);\n        case actionTypes.SET_TRANSACTIONS:\n            return setTransactions(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Wallet;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    unsettledContests: [],\n    settledContests: []\n};\n\nconst setUnsettledContests = (state, action) => {\n    return updateObject(state, {\n        unsettledContests: action.unsettledContests\n    });\n};\n\nconst setSettledContests = (state, action) => {\n    return updateObject(state, {\n        settledContests: action.settledContests\n    });\n};\n\nconst Account = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_UNSETTLED_CONTESTS:\n            return setUnsettledContests(state, action);\n        case actionTypes.SET_SETTLED_CONTESTS:\n            return setSettledContests(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Account;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n// import * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport Auth from './store/reducers/Auth';\nimport Home from './store/reducers/Home';\nimport MyCards from './store/reducers/MyCards';\nimport MainLayout from './store/reducers/MainLayout';\nimport Contests from './store/reducers/Contests';\nimport Leaders from './store/reducers/Leaders';\nimport Wallet from './store/reducers/Wallet';\nimport Account from './store/reducers/Account';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nconst getBasename = () => {\n    return `/${process.env.PUBLIC_URL.split('/').pop()}`;\n};\n\n/*\n * combining all the reducers\n */\nconst rootReducer = combineReducers({\n    auth: Auth,\n    mainLayout: MainLayout,\n    home: Home,\n    myCards: MyCards,\n    contests: Contests,\n    leaders: Leaders,\n    wallet: Wallet,\n    account: Account\n});\n\n/*\n * composeEnhancers is for chrome dev toolbar which helps us see store management of redux\n */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n/*\n * Creating Store and applying middleware \n */\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n/*\n * Wrapping the main app with HashRouter (provides routing and helps us navigate through project)\n * Provider is a part of Redux which is needed in order to get access to store throughout our project \n */\nconst app = (\n    <Provider store={store}>\n        <HashRouter basename={getBasename()}>\n            <App />\n        </HashRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n// serviceWorker.register();\n","// importing axios for network request\nimport axios from 'axios';\nimport { axiosBaseUrl } from '../config';\nimport { getItem } from '../helpers/cookie';\n// Get Authentication token\nconst getAuthToken = () => {\n    const token = getItem('token');\n    return token;\n}\n\n// Created Axios instance to use it in whole application\nvar instance = axios.create({\n    baseURL: axiosBaseUrl,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n// declaring interceptors\ninstance.interceptors.request.use(response => {\n    const token = getAuthToken();\n    // Check if User is authenticated or not\n    if (token) {\n        response.headers = {\n            'x-access-token': `${token}`\n        }\n    }\n    return response;\n}, error => {\n    return error;\n});\n\nexport default instance;\n\n\n","import * as actionTypes from './actionTypes';\nimport axios from '../../httpInstance/axios';\nimport { setItem, clearItems } from '../../helpers/cookie';\nimport { loginUrl, signupUrl, socialLoginUrl, verifyEmailUrl, setPasswordUrl } from '../../url/Auth';\n\n\nexport const setSnackbarMessage = (message) => {\n    return {\n        type: actionTypes.SET_SNACKBAR_MESSAGE,\n        message\n    };\n};\n\nexport const authSuccess = (response) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        adminDetails: response,\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    // Clear cookies on logout\n    clearItems();\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const updateLoadingStatus = (status) => {\n    return {\n        type: actionTypes.UPDATE_LOADING_STATUS,\n        status\n    };\n};\n\nexport const login = (loginDetails) => {\n    return dispatch => {\n        dispatch(updateLoadingStatus(true));\n        axios.post(loginUrl(), loginDetails)\n            .then(response => {\n                dispatch(updateLoadingStatus(false));\n                if (response.data.status) {\n                    const auth = {\n                        token: response.data.entity.token,\n                        id: response.data.entity.id,\n                        role: response.data.entity.roles\n                    }\n                    console.log('==auth===', auth);\n                    setItem('auth', auth);\n                    dispatch(authSuccess(response.data.entity));\n                } else {\n                    dispatch(authFail('Invalid username or password !'));\n                }\n            })\n            .catch(error => {\n                dispatch(updateLoadingStatus(false));\n                if (error.response && error.response.status === 401) {\n                    dispatch(authFail(error.response.data.message));\n                } else {\n                    dispatch(authFail('Something Went Wrong !!'));\n                }\n            });\n    };\n};\n\nexport const signup = (signupDetails) => {\n    return dispatch => {\n        dispatch(updateLoadingStatus(true));\n        axios.post(signupUrl(), signupDetails)\n            .then(response => {\n                dispatch(updateLoadingStatus(false));\n                if (response.data.status) {\n                    dispatch(setSnackbarMessage('User created successfully !'));\n                    dispatch(login(signupDetails));\n                } else {\n                    dispatch(authFail('Invalid username or password !'));\n                }\n            })\n            .catch(error => {\n                dispatch(updateLoadingStatus(false));\n                if (error.response && error.response.status === 401) {\n                    dispatch(authFail(error.response.data.message));\n                } else {\n                    dispatch(authFail('Something Went Wrong !!'));\n                }\n            });\n    };\n};\n\nexport const setRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const emptyToken = () => {\n    return {\n        type: actionTypes.EMPTY_TOKEN\n    };\n};\n\nexport const socialLogin = (authDetails) => {\n    return dispatch => {\n        dispatch(updateLoadingStatus(true));\n        axios.post(socialLoginUrl(), authDetails)\n            .then(response => {\n                dispatch(updateLoadingStatus(false));\n                if (response.data.status) {\n                    const auth = {\n                        token: response.data.entity.token,\n                        id: response.data.entity.id,\n                        role: response.data.entity.roles\n                    }\n                    setItem('auth', auth);\n                    dispatch(authSuccess(response.data.entity));\n                    // dispatch(checkUserProfileUpdated(response.data.entity.isUserProfileUpdated));\n                } else {\n                    dispatch(authFail('Invalid username or password !'));\n                }\n            })\n            .catch(error => {\n                dispatch(updateLoadingStatus(false));\n                if (error.response && error.response.status === 401) {\n                    dispatch(authFail(error.response.data.message));\n                } else {\n                    dispatch(authFail('Something Went Wrong !!'));\n                }\n            });\n    };\n};\n\nexport const setRequestToSetPasswordId = (requestToSetPassword) => {\n    return {\n        type: actionTypes.SET_REQUEST_TO_SET_PASSWORD_ID,\n        requestToSetPassword\n    };\n};\n\nexport const verifyEmail = (email) => {\n    return dispatch => {\n        dispatch(updateLoadingStatus(true));\n        axios.post(verifyEmailUrl(), { email: email })\n            .then(response => {\n                dispatch(updateLoadingStatus(false));\n                if (response.data.status) {\n                    dispatch(setSnackbarMessage(response.data.message));\n                    dispatch(setRequestToSetPasswordId(response.data.entity.requestToSetPassword.id));\n                } else {\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n                dispatch(updateLoadingStatus(false));\n                if (error.response && error.response.status === 401) {\n                    dispatch(authFail(error.response.data.message));\n                } else {\n                    dispatch(authFail('Something Went Wrong !!'));\n                }\n            });\n    };\n};\n\n\nexport const updateSetPasswordStatus = (status) => {\n    return {\n        type: actionTypes.UPDATE_SET_PASSWORD_STATUS,\n        status\n    };\n};\n\nexport const setPassword = (passwordData) => {\n    return dispatch => {\n        // dispatch(updateLoadingStatus(true));\n        axios.post(setPasswordUrl(), passwordData)\n            .then(response => {\n                // dispatch(updateLoadingStatus(false));\n                if (response.data.status) {\n                    dispatch(setSnackbarMessage('Password set successfully !'));\n                    dispatch(updateSetPasswordStatus(true));\n                }\n                else {\n                    dispatch(updateSetPasswordStatus(false));\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n                // dispatch(updateLoadingStatus(false));\n                if (error.response && error.response.status === 401) {\n                    dispatch(authFail(error.response.data.message));\n                } else {\n                    dispatch(authFail('Something Went Wrong !!'));\n                }\n            });\n    };\n};\n","\nexport const loginUrl = () => {\n    return `login`;\n};\n\nexport const signupUrl = () => {\n    return `users`;\n};\n\nexport const socialLoginUrl = () => {\n    return `social-login`;\n};\n\nexport const verifyEmailUrl = () => {\n    return `requesttosetpassword`;\n};\n\nexport const setPasswordUrl = () => {\n    return `forgotpassword`;\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../httpInstance/axios';\n// import { getItem } from '../../helpers/cookie';\n\nexport const setLeaders = (leaders) => {\n    return {\n        type: actionTypes.SET_LEADERS,\n        leaders\n    };\n};\n\nexport const getLeaders = () => {\n    return dispatch => {\n        axios.get(`leadership`)\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setLeaders(response.data.entity));\n                }\n            })\n            .catch(error => {\n\n            });\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../httpInstance/axios';\nimport { updateUserLocationUrl } from '../../url/MainLayout';\n\nexport const setSnackbarMessage = (message) => {\n    return {\n        type: actionTypes.SET_SNACKBAR_MESSAGE,\n        message\n    };\n};\n\nexport const updateUserLocation = (location) => {\n    return dispatch => {\n        axios.put(updateUserLocationUrl(), location)\n            .then(response => {\n                dispatch(setSnackbarMessage('location set successfully'))\n            })\n            .catch(error => {\n\n            });\n    };\n};\n\n","\nimport { getItem } from '../helpers/cookie';\n\nexport const updateUserLocationUrl = () => {\n    return `users/${getItem('id')}/location`;\n};\n","\nimport { getItem } from '../helpers/cookie';\n\nexport const cardsUrl = () => {\n    return `users/${getItem('id')}/cards`;\n};\n\nexport const cardDetailsUrl = (cardId) => {\n    return `cards/${cardId}/details`;\n};\n\nexport const socialUrl = () => {\n    return `users/${getItem('id')}/social`;\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../httpInstance/axios';\nimport { cardsUrl, cardDetailsUrl, socialUrl } from '../../url/MyCards';\n\nexport const setSnackbarMessage = (message) => {\n    return {\n        type: actionTypes.SET_SNACKBAR_MESSAGE,\n        message\n    };\n};\n\nexport const updateLoadingStatus = (status) => {\n    return {\n        type: actionTypes.UPDATE_LOADING_STATUS,\n        status\n    };\n};\n\nexport const setCards = (cards) => {\n    return {\n        type: actionTypes.SET_CARDS,\n        cards\n    };\n};\n\nexport const setUserDetails = (userDetails) => {\n    return {\n        type: actionTypes.SET_USER_DETAILS,\n        userDetails\n    };\n};\n\nexport const getCards = () => {\n    return dispatch => {\n        axios.get(cardsUrl())\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setCards(response.data.entity.cards || []));\n                    dispatch(setUserDetails(response.data.entity.user));\n                } else {\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n                dispatch(setSnackbarMessage('Something Went Wrong !!'));\n            });\n    };\n};\n\nexport const setSocialUrl = (socialUrl) => {\n    return {\n        type: actionTypes.SET_SOCIAL_URL,\n        socialUrl\n    };\n};\n\nexport const getSocialUrl = () => {\n    return dispatch => {\n        axios.get(socialUrl())\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setSocialUrl(response.data.entity));\n                }\n            })\n            .catch(error => {\n\n            });\n    };\n};\n\nexport const updateCards = (cardDetails) => {\n    return {\n        type: actionTypes.UPDATE_CARDS,\n        cardDetails\n    };\n};\n\nexport const addCard = (cardDetails) => {\n    return dispatch => {\n        axios.post(cardsUrl(), cardDetails)\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(updateCards(response.data.entity));\n                    dispatch(setSnackbarMessage(response.data.message));\n                } else {\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n                // dispatch(authFail('Something Went Wrong !!'));\n            });\n    };\n};\n\nexport const updateCardDetails = (cardId, cardDetails) => {\n    return dispatch => {\n        axios.put(cardDetailsUrl(cardId), cardDetails)\n            .then(response => {\n                if (response.data.entity) {\n                    // dispatch(updateCards(response.data.entity));\n                    dispatch(setSnackbarMessage(response.data.message));\n                } else {\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n                // dispatch(authFail('Something Went Wrong !!'));\n            });\n    };\n};\n\nexport const emptyCards = () => {\n    return {\n        type: actionTypes.EMPTY_CARDS\n    };\n};\n","\n\nimport { getItem } from '../helpers/cookie';\n\nexport const userProfileUrl = () => {\n    return `users/${getItem('id')}/profile`;\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../httpInstance/axios';\nimport { userProfileUrl } from '../../url/Home';\nimport { socialUrl } from '../../url/MyCards';\n\nexport const setSnackbarMessage = (message) => {\n    return {\n        type: actionTypes.SET_SNACKBAR_MESSAGE,\n        message\n    };\n};\n\nexport const setUserDetails = (userDetails) => {\n    return {\n        type: actionTypes.SET_USER_DETAILS,\n        userDetails\n    };\n};\n\nexport const setUserSocialUrl = (userSocialUrl) => {\n    return {\n        type: actionTypes.SET_USER_SOCIAL_URL,\n        userSocialUrl\n    };\n};\n\nexport const getUserProfile = () => {\n    return dispatch => {\n        axios.get(userProfileUrl())\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setUserSocialUrl(response.data.entity.social));\n                    dispatch(setUserDetails(response.data.entity.user));\n                }\n            })\n            .catch(error => {\n\n            });\n    };\n};\n\nexport const updateUserProfile = (profileDetails) => {\n    return dispatch => {\n        axios.put(userProfileUrl(), profileDetails)\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setUserDetails(response.data.entity));\n                    dispatch(setSnackbarMessage(response.data.message));\n                } else {\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n\n            });\n    };\n};\n\nexport const updateSocialUrl = (socialPlatform) => {\n    return dispatch => {\n        axios.put(socialUrl(), socialPlatform)\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setUserSocialUrl(response.data.entity));\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n\n            });\n    };\n};\n\nexport const emptyUserProfile = () => {\n    return {\n        type: actionTypes.EMPTY_USER_PROFILE\n    };\n};\n","import Cookies from 'universal-cookie';\nimport { isAndroid } from '../helpers/miscellaneous';\n\nconst cookies = new Cookies();\n\nexport const getItem = (key) => {\n    let meta = null;\n    console.log('==meta===', meta, '===', localStorage.getItem('token'));\n    const auth = JSON.parse(localStorage.getItem('auth'));\n    if (auth && auth.hasOwnProperty(key)) {\n        meta = auth[key];\n    } else {\n        meta = JSON.parse(localStorage.getItem(key));\n    }\n    // if (isAndroid()) {\n    //     const auth = JSON.parse(localStorage.getItem('auth'));\n    //     if (auth && auth.hasOwnProperty(key)) {\n    //         meta = auth[key];\n    //     } else {\n    //         meta = JSON.parse(localStorage.getItem(key));\n    //     }\n    // } else {\n    //     const auth = cookies.get('auth');\n    //     if (auth && auth.hasOwnProperty(key)) {\n    //         meta = auth[key];\n    //     } else {\n    //         meta = cookies.get(key);\n    //     }\n    // }\n    return meta;\n};\n\nexport const setItem = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value))\n    // isAndroid() ? localStorage.setItem(key, JSON.stringify(value)) : cookies.set(key, value, { path: '/' });\n};\n\nexport const removeItem = (key) => {\n    cookies.remove(key, { path: '/' });\n};\n\nexport const clearItems = () => {\n    localStorage.clear();\n    // if (isAndroid()) {\n    //     localStorage.clear();\n    // } else {\n    //     const allCookies = cookies.getAll();\n    //     for (let key in allCookies) {\n    //         cookies.remove(key, { path: '/' });\n    //     }\n    // }\n};\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbar\":\"Snackbar_snackbar__cWZDo\",\"show\":\"Snackbar_show__2-uF8\",\"fadeout\":\"Snackbar_fadeout__2zRAU\",\"fadein\":\"Snackbar_fadein__gK3he\",\"close_icon\":\"Snackbar_close_icon__3hL4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrong-outer\":\"ErrorBoundary_wrong-outer__246kP\",\"wrong-inner\":\"ErrorBoundary_wrong-inner__3-mlZ\",\"img-went-wrong\":\"ErrorBoundary_img-went-wrong__2KZd7\"};","\nexport const isMobileView = () => {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\n\nexport const parseData = (data) => {\n    return JSON.parse(JSON.stringify(data));\n};\n\nexport const getCapitalizeText = (text) => {\n    return text.replace(/\\b\\w/g, l => l.toUpperCase());\n}\n\nexport const isEmpty = (item) => {\n    return item.trim() === '';\n};\n\nexport const isEqual = (item1, item2) => {\n    if (typeof (item1) === 'number' && typeof (item2) === 'number') {\n        return item1 === item2;\n    }\n    if (typeof (item1) === 'string' && typeof (item2) === 'string') {\n        return item1.toLowerCase() === item2.toLowerCase();\n    }\n};\n\nexport const containsOnlyNumber = (item) => {\n    let regex = /^[0-9]*$/;\n    return regex.test(item);\n};\n\nexport const isGreaterThan = (item1, item2) => {\n    return item1 > item2;\n};\n\nexport const isGreaterThanOrEqualTo = (item1, item2) => {\n    return item1 >= item2;\n};\n\nexport const isLessThan = (item1, item2) => {\n    return item1 < item2;\n};\n\nexport const isLessThanOrEqualTo = (item1, item2) => {\n    return item1 <= item2;\n};\n\nexport const create_UUID = (name) => {\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return (c === 'x' ? r : ((r & 0x3) | 0x8)).toString(16);\n    });\n    return uuid.concat(name);\n};\n\nexport const getDateTime = (timeStamp) => {\n    const date = new Date(timeStamp);\n    const dateTime = (\n        date.getUTCFullYear() +\n        '-' + ('0' + date.getUTCMonth()).slice(-2) +\n        '-' + ('0' + date.getUTCDate()).slice(-2) +\n        ' ' + ('0' + date.getUTCHours()).slice(-2) +\n        ':' + ('0' + date.getUTCMinutes()).slice(-2) +\n        ':' + ('0' + date.getUTCSeconds()).slice(-2)\n    );\n    return dateTime;\n};\n\nexport const getDate = (timeStamp) => {\n    const date = new Date(timeStamp);\n    const updatedDate = (\n        date.getUTCFullYear() +\n        '-' + ('0' + date.getUTCMonth()).slice(-2) +\n        '-' + ('0' + date.getUTCDate()).slice(-2)\n    );\n    return updatedDate;\n};\n\nexport const convertDateFormat = (date, customDateFormat) => {\n    date = new Date(date);\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n    month = month < 10 ? `0${month}` : month;\n    day = day < 10 ? `0${day}` : day;\n    if (customDateFormat) {\n        return `${day}/${month}/${date.getFullYear()}`\n    }\n    return `${date.getFullYear()}-${month}-${day}`;\n};\n\nexport const convertToTimestamp = (date) => {\n    return new Date(date).getTime();\n};\n\nexport const isAndroid = () => {\n    // var ua = navigator.userAgent;\n    return !navigator.userAgent.match(/Android/i);\n    // if (!(ua.match(/Android/i))) {\n    //     //this code will run only when there is any non-android client.\n    // }\n};\n"],"sourceRoot":""}