{"version":3,"sources":["helpers/messages.js","helpers/Object.js","components/Auth/SocialLogin/SocialLogin.js","components/Auth/Login/LoginForm/LoginForm.js","components/Auth/Login/Login.js"],"names":["messages","socialMedia","name","email","cardName","category","required","invalidEmail","notMatch","passwordFormat","firstName","lastName","mobile","isMobileInvalid","dateOfBirth","summary","schoolName","area","city","fromGrade","toGrade","competitionName","year","standing","videoUrl","title","explanation","tags","participants","teamName","projectName","problemToSolve","reasonToSolveProblem","approachToSolveProblem","technologyUsed","isObjectEmpty","obj","Object","keys","length","isObjectNotEmpty","SocialLogin","props","responseGoogle","response","authDetails","profileObj","socialAccessToken","accessToken","loginType","onSocialLogin","className","appId","facebookAppId","fields","size","icon","style","width","callback","isMobile","window","innerWidth","innerHeight","clientId","googleClientId","buttonText","loginScope","onSuccess","onFailure","cookiePolicy","LoginForm","useState","password","formInput","setFormInput","invalidInput","setInvalidInput","isButtonDisabled","setButtonDisabled","useEffect","error","formChangeHandler","event","formInputDetails","target","id","value","resetError","invalidInputDetails","parseData","Form","onSubmit","key","isEmpty","login","Input","type","fluid","label","placeholder","onChange","to","Button","loading","disabled","connect","state","auth","authRedirectPath","isLoading","dispatch","onLogin","loginDetails","actionCreaters","onSetRedirectPath","path","onResetError","getItem","authRedirect","Col","Row","height","justifyContent","alignItems","md","lg","xs"],"mappings":"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","file":"static/js/13.8c27e6bf.chunk.js","sourcesContent":["\nexport const messages = {\n    socialMedia: 'Please add atleast one social media',\n    name: 'Name is required',\n    email: 'Email is required',\n    cardName: 'Card Name is required',\n    category: 'Card Category is required',\n    required: 'is required',\n    invalidEmail: 'Please enter a valid email',\n    notMatch: 'Password and Confirm Password not match',\n    passwordFormat: 'At least 6 characters with at least 1 Small & Upper case character, a number & symbol',\n    firstName: 'First name is required',\n    lastName: 'Last name is required',\n    mobile: 'Mobile number is required',\n    isMobileInvalid: 'Mobile number contain 10 digits',\n    dateOfBirth: 'Date Of Birth is required',\n    summary: 'Summary is required',\n    schoolName: 'School name is required',\n    area: 'Area is required',\n    city: 'City is required',\n    fromGrade: 'From class is required',\n    toGrade: 'To Class is required',\n    competitionName: 'Competition name is required',\n    year: 'Year is required',\n    standing: 'Standing position is required',\n    videoUrl: 'Video is required',\n    title: 'Title is required',\n    explanation: 'Explanation is required',\n    tags: 'Tags are required',\n    participants: 'Please add atlease one participant',\n    teamName: 'Please enter your team name',\n    projectName: 'Please enter your project name',\n    problemToSolve: 'Please specify the problem to solve',\n    reasonToSolveProblem: 'Please specify the reason to solve the problem',\n    approachToSolveProblem: 'Please specify your approach to solve the problem',\n    technologyUsed: 'Please specify the list of technologies you want to use'\n};\n","\nexport const isKeyExist = (obj, key) => {\n    return obj.hasOwnProperty(key);\n};\n\nexport const isObjectEmpty = (obj) => {\n    return Object.keys(obj).length === 0;\n};\n\nexport const isObjectNotEmpty = (obj) => {\n    return Object.keys(obj).length > 0;\n};\n","import React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { facebookAppId, googleClientId } from '../../../config';\nimport './SocialLogin.css';\n\nconst SocialLogin = (props) => {\n\n    const responseGoogle = (response) => {\n        if ('googleId' in response) {\n            const authDetails = {\n                email: response.profileObj.email,\n                socialAccessToken: response.accessToken,\n                loginType: 'google'\n            };\n            props.onSocialLogin(authDetails);\n        }\n    };\n    const responseFacebook = (response) => {\n        if (response) {\n            const authDetails = {\n                email: response.email,\n                socialAccessToken: response.accessToken,\n                loginType: 'facebook'\n            };\n            props.onSocialLogin(authDetails);\n        }\n    };\n\n    return (\n        <div className=\"social-login\">\n            <div className=\"facebook-login\">\n                <FacebookLogin\n                    className=\"p-1\"\n                    appId={facebookAppId}\n                    fields=\"name,email\"\n                    size=\"metro\"\n                    icon=\"fa-facebook\"\n                    style={{ width: '100%' }}\n                    callback={responseFacebook}\n                    // Check if mobile screen then enable isMobile prop\n                    isMobile={window.innerWidth <= 800 && window.innerHeight <= 600}\n                // render={renderProps => (\n                //     <Button color='facebook' onClick={renderProps.onClick}>\n                //         <Icon name='facebook' /> Facebook\n                //     </Button>\n                // )}\n                />\n            </div><br />\n            <div className=\"google-login\">\n                <GoogleLogin\n                    clientId={googleClientId}\n                    buttonText=\"LOGIN WITH GOOGLE\"\n                    className=\"w-100\"\n                    loginScope='email profile openid'\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default SocialLogin;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'semantic-ui-react';\nimport { parseData, isEmpty } from '../../../../helpers/miscellaneous';\nimport { messages } from '../../../../helpers/messages';\nimport { isObjectEmpty } from '../../../../helpers/Object';\n\nconst LoginForm = (props) => {\n    const [formInput, setFormInput] = useState({\n        email: '',\n        password: '',\n    });\n    const [invalidInput, setInvalidInput] = useState({});\n    const [isButtonDisabled, setButtonDisabled] = useState(false);\n\n    useEffect(() => {\n        props.error && setButtonDisabled(false);\n    }, [props.error]);\n\n    const formChangeHandler = (event) => {\n        const formInputDetails = { ...formInput };\n        formInputDetails[event.target.id] = event.target.value;\n        setFormInput(formInputDetails);\n        props.error && props.resetError();\n        if (invalidInput[event.target.id]) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails[event.target.id];\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    const login = () => {\n        const invalidInputDetails = parseData(invalidInput);\n\n        for (let key in formInput) {\n            if (isEmpty(formInput[key])) {\n                invalidInputDetails[key] = `${key} ${messages.required}`;\n            }\n        }\n        setInvalidInput(invalidInputDetails);\n\n        if (isObjectEmpty(invalidInputDetails)) {\n            setButtonDisabled(true);\n            props.login(formInput);\n        }\n    };\n\n    return (\n        <Form onSubmit={() => login()}>\n            <Form.Input\n                // error={{ content: 'Please enter your first name', pointing: 'below' }}\n                error={invalidInput.email}\n                type=\"email\"\n                id='email'\n                required\n                fluid\n                label='Email'\n                placeholder='Email'\n                onChange={(event) => formChangeHandler(event)}\n            />\n            <Form.Input\n                error={invalidInput.password}\n                type='password'\n                id='password'\n                required\n                fluid\n                label='Password'\n                placeholder='Password'\n                onChange={(event) => formChangeHandler(event)}\n            />\n            <div className=\"forgot-password text-right pr-1\">\n                <Link to=\"/forgot-password\">Forgot Password</Link>\n            </div>\n            {\n                props.error &&\n                <div className=\"text-center text-danger mt-3 mb-3\">\n                    {props.error}\n                </div>\n            }\n            <div className=\"mt-4\">\n                <Button\n                    type=\"submit\"\n                    fluid\n                    loading={isButtonDisabled}\n                    disabled={isButtonDisabled}>Login</Button>\n            </div>\n        </Form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Col, Row } from 'reactstrap';\nimport LoginForm from './LoginForm/LoginForm';\nimport * as actionCreaters from '../../../store/actions';\nimport { getItem } from '../../../helpers/cookie';\nimport { Link } from 'react-router-dom';\nimport SocialLogin from '../SocialLogin/SocialLogin';\nimport './Login.css';\n\nconst Login = (props) => {\n\n    useEffect(() => {\n        if (getItem('token')) {\n            props.onSetRedirectPath('/');\n        }\n    }, []);\n\n    let authRedirect = null;\n    if (getItem('token')) {\n        authRedirect = <Redirect to=\"/\" />\n    }\n\n    return (\n        <Col className=\"login\">\n            <Row\n                style={{\n                    height: '100vh',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }}>\n                {authRedirect}\n                <Col className=\"ml-1\" md={6} lg={3} xs={10}>\n                    <SocialLogin onSocialLogin={(authDetails) => props.onSocialLogin(authDetails)} /><br /><br />\n                    <LoginForm\n                        login={(loginDetails) => props.onLogin(loginDetails)}\n                        error={props.error}\n                        resetError={() => props.onResetError()} /><br />\n                    <div className=\"redirect-to-signup text-center mt-3\">\n                        Not a member <Link to=\"/signup\">Signup</Link>\n                    </div>\n                </Col>\n            </Row>\n        </Col>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        error: state.auth.error,\n        authRedirectPath: state.auth.authRedirectPath,\n        isLoading: state.auth.isLoading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogin: (loginDetails) => dispatch(actionCreaters.login(loginDetails)),\n        onSetRedirectPath: (path) => dispatch(actionCreaters.setRedirectPath(path)),\n        onResetError: () => dispatch(actionCreaters.authFail(null)),\n        onSocialLogin: (authDetails) => dispatch(actionCreaters.socialLogin(authDetails))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"sourceRoot":""}